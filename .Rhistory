way <- c(3,8,9)
ways <- way
plot (ways)
ways/sum(ways)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native",
"CXXFLAGS= -Wno-unused-variable -Wno-unused-function  -Wno-macro-redefined",
file = M, sep = "\n", append = TRUE)
cat("\nCC=clang",
"CXX=clang++ -arch x86_64 -ftemplate-depth-256",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
# note: omit the 's' in 'https' if you cannot handle https downloads
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
library("rstan") # observe startup messages
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
install.packages("coda","mvtnorm","devtools")
source("/Users/rcphelps/code/githubPublic/transect/graphing_functions.R")
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
print(ggplotAphid)
print(ggplotMealy)
print(ggplotAnts)
print(ggplotMoths)
length(vineyard.df$mealyBugs)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/graphing_functions.R', echo=TRUE)
source('~/code/githubPublic/transect/graphing_functions.R', echo=TRUE)
source('~/code/githubPublic/transect/graphing_functions.R', echo=TRUE)
source('~/code/githubPublic/transect/graphing_functions.R', echo=TRUE)
source('~/code/githubPublic/transect/graphing_functions.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/BFH/NumericalEcologyWithR/NEwR_updated_material_R332-NEwR_ed1/chap3.R', echo=TRUE)
getwd()
setwd("/Users/rcphelps/BFH")
lsit
list.files()
setwd("./NumericalEcologyWithR")
list.files()
setwd("./NEwR_updated_material_R332-NEwR_ed1")
ls
list.files()
source('~/BFH/NumericalEcologyWithR/NEwR_updated_material_R332-NEwR_ed1/chap3.R', echo=TRUE)
warnings()
matrix <- data.matrix(vineyard.df, rownames.force = NA)
matrix
head(matrix)
matrix <- data.matrix(vineyard.df, rownames.force = TRUE)
head(matrix)
matrix <- subset(matrix, select = -c(environ.var.1, environ.var.2, environ.var.3))
head(matrix)
matrix <- subset(matrix, select = -c(max.aphids, max.mealybugs, max.ants, max.moths))
head(matrix)
matrix <- subset(matrix, select = -c(max.aphids, max.mealybugs, max.ants...mealybug, max.moths))
head(matrix)
matrix <- subset(matrix, select = -c(transect, X, Y, elevation.change, fall.line.exposure))
head(matrix)
cor(matrix, method = c("pearson", "kendall", "spearman"))
install.packages("Hmisc")
library("Hmisc")
matrix.list <- rcorr(matrix)
matrix.list
coef <- matrix.list$r
coef
coef <- matrix.list$r
print(makeHeatmap(coef))
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/heatmapGraphics.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
head(spe)
head(spe.hel)
getwd()
head(read.csv("DoubsSpe.csv", row.names=1))
speciesMatrix <- subset(matrix, select = c(aphids, mealybugs. ants...mealybug, moths))
head(matrix)
speciesMatrix <- subset(matrix, select = c(aphids, mealybugs. ants, moths))
speciesMatrix <- subset(matrix, select = c(aphids, mealybugs, ants, moths))
head(speciesMatrix)
head(spa)
summary(cor)
matrix <- data.matrix(vineyard.df, rownames.force = TRUE)
matrix <- subset(matrix, select = -c(transect, X, Y, elevation.change, fall.line.exposure))
matrix <- subset(matrix, select = -c(max.aphids, max.mealybugs, max.ants...mealybug, max.moths))
matrix <- subset(matrix, select = -c(environ.var.1, environ.var.2, environ.var.3))
head(matrix)
cor(matrix, method = c("pearson", "kendall", "spearman"))
?cor
cor(matrix, method = c("pearson", "kendall", "spearman"))
cor(matrix, method = c("kendall"))
cor(matrix, method = "kendall")
?rcorr
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
?subset
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
speciesMatrix
speciesMatrix <- data.matrix(vineyard.df, rownames.force = TRUE)
head(speciesMatrix)
speciesMatrix <- subset(speciesMatrix, X != c(-5,-4,-3,-2,-1))
speciesMatrix <- subset(speciesMatrix, transect= "1a")
speciesMatrix <- data.matrix(vineyard.df, rownames.force = TRUE)
speciesMatrix <- subset(speciesMatrix, X<> c(-5,-4,-3,-2,-1))
speciesMatrix <- subset(speciesMatrix, X!= c(-5,-4,-3,-2,-1))
transect
head(speciesMatrix)
speciesMatrix
head(speciesMatrix)
speciesMatrix[speciesMatrix[,2] != -5]
head(speciesMatrix)
head(speciesMatrix[speciesMatrix[,2] != "-5"])
speciesMatrix <- data.matrix(vineyard.df, rownames.force = TRUE)
speciesMatrix <- subset(speciesMatrix, select = c(aphids, mealybugs, ants, moths, X))
head(speciesMatrix)
head(speciesMatrix[speciesMatrix[,2] != "-5",])
head(speciesMatrix[speciesMatrix[,2] != -5,])
head(speciesMatrix[speciesMatrix[,5] != -5,])
head(speciesMatrix[speciesMatrix[,5] != c(-5,-4,-3,-2,-1)])
head(speciesMatrix[speciesMatrix[,5] != c("-5","-4","-3","-2","-1")])
head(speciesMatrix[speciesMatrix[,5] != c("-5"|"-4"|"-3"|"-2"|"-1")])
speciesMatrix <- data.matrix(vineyard.df, rownames.force = TRUE)
# pretend that we have data from multiple transects; use only transect "1a"
speciesMatrix <- subset(speciesMatrix, transect= "1a")
# now, in the other dimension, remove rows representing data in the "margin"
speciesMatrix[speciesMatrix[,2] != -5,]
speciesMatrix[speciesMatrix[,2] != -4,]
speciesMatrix[speciesMatrix[,2] != -3,]
speciesMatrix[speciesMatrix[,2] != -2,]
speciesMatrix[speciesMatrix[,2] != -1,]
head(speciesMatrix)
speciesMatrix <- [speciesMatrix[,2] != -5,]
speciesMatrix <- speciesMatrix[speciesMatrix[,2] != -5,]
head(speciesMatrix)
speciesMatrix <- data.matrix(vineyard.df, rownames.force = TRUE)
# pretend that we have data from multiple transects; use only transect "1a"
speciesMatrix <- subset(speciesMatrix, transect= "1a")
# now, in the other dimension, remove rows representing data in the "margin"
speciesMatrix <- speciesMatrix[speciesMatrix[,2] != -5,]
speciesMatrix <- speciesMatrix[speciesMatrix[,2] != -4,]
speciesMatrix <- speciesMatrix[speciesMatrix[,2] != -3,]
speciesMatrix <- speciesMatrix[speciesMatrix[,2] != -2,]
speciesMatrix <- speciesMatrix[speciesMatrix[,2] != -1,]
head(speciesMatrix)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
setwd("/Users/rcphelps/BFH")
setwd("./NumericalEcologyWithR")
setwd("./NEwR_updated_material_R332-NEwR_ed1")
getwd()
source('~/BFH/NumericalEcologyWithR/NEwR_updated_material_R332-NEwR_ed1/chap3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
library(gclus)
library(gclus)
library(ade4)
library(vegan)
library(gclus)
library(cluster)
library(FD)
source("coldiss.R")
source("panelutils.R")
getwd()
setwd("/Users/rcphelps/BFH/NumericalEcologyWithR/NEwR_updated_material_R332-NEwR_ed1")
source("coldiss.R")
source("panelutils.R")
spe <- read.csv("DoubsSpe.csv", row.names=1)
env <- read.csv("DoubsEnv.csv", row.names=1)
# spa <- read.csv("DoubsSpa.csv", row.names=1)
spa <- read.csv("DoubsSpa.csv", row.names=1)
# Remove empty site 8
spe <- spe[-8,]
env <- env[-8,]
spa <- spa[-8,]
spe.db <- vegdist(spe)	# method="bray" (default)
head(spe.db)
# Percentage difference (Bray-Curtis) dissimilarity matrix
# on log-transformed abundances
spe.dbln <- vegdist(log1p(spe))
head(spe.dbln)
# Chord distance matrix
spe.norm <- decostand(spe, "nor")
spe.dc <- dist(spe.norm)
head(spe.dc)
# Hellinger distance matrix
spe.hel <- decostand(spe, "hel")
spe.dh <- dist(spe.hel)
head(spe.dh)
# Jaccard dissimilarity matrix using function vegdist()
spe.dj <- vegdist(spe, "jac", binary=TRUE)
head(spe.dj)
head(sqrt(spe.dj))
# Jaccard dissimilarity matrix using function dist()
spe.dj2 <- dist(spe, "binary")
head(spe.dj2)
# Jaccard dissimilarity matrix using function dist.binary()
spe.dj3 <- dist.binary(spe, method=1)
head(spe.dj3)
# Sorensen dissimilarity matrix using function dist.binary()
spe.ds <- dist.binary(spe, method=5)
head(spe.ds)
# Sorensen dissimilarity matrix using function vegdist()
spe.ds2 <- vegdist(spe, binary=TRUE)
head(spe.ds2)
head(sqrt(spe.ds2))
# Ochiai dissimilarity matrix
spe.och <- dist.binary(spe, method=7)
head(spe.och)
# Percentage difference (Bray-Curtis) dissimilarity matrix on raw species abundance data
dev.new(title="Percentage difference (Bray-Curtis), raw data", width=10, height=5)
coldiss(spe.db, byrank=FALSE, diag=TRUE)
coldiss(spe.db, byrank=FALSE, diag=TRUE)
head(spe.db)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
setwd("/Users/rcphelps/BFH/NumericalEcologyWithR/NEwR_updated_material_R332-NEwR_ed1")
setwd("/Users/rcphelps/BFH/NumericalEcologyWithR/NEwR_updated_material_R332-NEwR_ed1")
setwd("/Users/rcphelps/BFH/NumericalEcologyWithR/NEwR_updated_material_R332-NEwR_ed1")
spe.db <- vegdist(spe)	# method="bray" (default)
head(spe.db)
head(spe)
head(speciesMatrix)
speciesMatrix.db <- vegdist(speciesMatrix)	# method="bray" (default)
head(speciesMatrix.db)
dev.new(title="Percentage difference (Bray-Curtis), raw data", width=10, height=5)
coldiss(speciesMatrix.db, byrank=FALSE, diag=TRUE)
source("/Users/rcphelps/code/githubPublic/transect/numericalEcologyWithR/coldiss-mod.R")
dev.new(title="Percentage difference (Bray-Curtis), raw data", width=10, height=5)
coldiss2(speciesMatrix.db, byrank=FALSE, diag=TRUE, "(Bray-Curtis)")
library(ade4)
library(vegan)
library(gclus)
library(cluster)
library(FD)
dev.new(title="Percentage difference (Bray-Curtis), raw data", width=10, height=5)
coldiss2(speciesMatrix.db, byrank=FALSE, diag=TRUE, "(Bray-Curtis)")
source("/Users/rcphelps/code/githubPublic/transect/numericalEcologyWithR/panelutils.R")
dev.new(title="Percentage difference (Bray-Curtis), raw data", width=10, height=5)
coldiss2(speciesMatrix.db, byrank=FALSE, diag=TRUE, "(Bray-Curtis)")
getwd()
setwd("/Users/rcphelps/code/githubPublic/transect")
dev.new(title="Percentage difference (Bray-Curtis), raw data", width=10, height=5)
coldiss2(speciesMatrix.db, byrank=FALSE, diag=TRUE, "(Bray-Curtis)")
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
dev.new(title="Percentage difference (Bray-Curtis), raw data", width=10, height=5)
coldiss2(speciesMatrix.db, "\n(Bray-Curtis)", byrank=FALSE, diag=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
?ggplot
spe.color
DUF <- c(104,100, 97, 96, 102, 98, 95, 99, 101, 101, 100, 105, 92, 97, 93, 91, 97, 98)
Genotype <- c("UPF 7", "UPF 15", "UPF 16", "UPF 17", "UPF 18", "UPF 19", "UFRGS 7", "UFRGS 14", "UFRGS 15", "UFRGS 16", "UFRGS 17", "UFRGS 18", "UFRGS 19", "URS 20", "URS 21", "IAC 7", "OR 2", "OR 3")
myframe <- data.frame(DUF)
head(myframe)
rownames(myframe) <- Genotype
head(myframe)
dis_mat <- daisy(myframe, metric = "euclidean", stand = FALSE)
as.matrix(dis_mat)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
linearBubbles(spacial.df, spatial.df$X, spatial.df$Y, alphaList, colorList)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/vineyard.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
source('~/code/githubPublic/transect/clustering3.R', echo=TRUE)
